/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Interface.AccountsRole;

import Business.EcoSystem;
import Business.Enterprise.Enterprise;
import Business.FinancialAdvisorAndPlans.FinancialPlan;
import Business.InvestmentPlans.InvestmentPlan;
import Business.Organization.CustomerOrganization;
import Business.Organization.Organization;
import Business.UserAccount.UserAccount;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import Business.WorkQueue.FinancialAdvisorWorkRequest;
import java.io.FileWriter;
import java.io.IOException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JPanel;
/**
 *
 * @author Akshay Gavandi
 */
public class ViewInvestmentPlans extends javax.swing.JPanel {

    /**
     * Creates new form ViewInvestmentPlans
     */
    private JPanel userProcessContainer;
    private UserAccount userAccount;
    private Organization organization;
    private EcoSystem business;
    private Enterprise enterprise;
    public ViewInvestmentPlans(JPanel userProcessContainer, UserAccount account, Organization organization, EcoSystem business, Enterprise enterprise) {
        initComponents();
        this.userProcessContainer = userProcessContainer;
        this.userAccount = account;
        this.organization = organization;
        this.business = business;
        this.enterprise = enterprise;
        populateFinPlansJTable();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        remPlanBtn1 = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        custPlansJTbl = new javax.swing.JTable();
        planSendBtn = new javax.swing.JButton();
        addPlanBtn = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        finPlansJTbl = new javax.swing.JTable();
        btnReport = new javax.swing.JButton();

        setBackground(new java.awt.Color(255, 255, 255));

        remPlanBtn1.setBackground(new java.awt.Color(0, 51, 102));
        remPlanBtn1.setFont(new java.awt.Font("Century Gothic", 0, 18)); // NOI18N
        remPlanBtn1.setForeground(new java.awt.Color(255, 255, 255));
        remPlanBtn1.setText("Remove Plan");
        remPlanBtn1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                remPlanBtn1ActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Century Gothic", 1, 24)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel1.setText("Investment Plans");

        custPlansJTbl.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Plan Name", "Frequency", "Risk", "Interest Rate", "Maturity Period", "EMI Amount"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        custPlansJTbl.setGridColor(new java.awt.Color(255, 255, 255));
        custPlansJTbl.setSelectionBackground(new java.awt.Color(0, 51, 102));
        jScrollPane1.setViewportView(custPlansJTbl);

        planSendBtn.setBackground(new java.awt.Color(0, 51, 102));
        planSendBtn.setFont(new java.awt.Font("Century Gothic", 0, 18)); // NOI18N
        planSendBtn.setForeground(new java.awt.Color(255, 255, 255));
        planSendBtn.setText("Send to Investor");
        planSendBtn.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        planSendBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                planSendBtnActionPerformed(evt);
            }
        });

        addPlanBtn.setBackground(new java.awt.Color(0, 51, 102));
        addPlanBtn.setFont(new java.awt.Font("Century Gothic", 0, 18)); // NOI18N
        addPlanBtn.setForeground(new java.awt.Color(255, 255, 255));
        addPlanBtn.setText("Add Plan");
        addPlanBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addPlanBtnActionPerformed(evt);
            }
        });

        finPlansJTbl.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Plan Name", "Frequency", "Risk", "Interest Rate", "Maturity Period", "EMI Amount"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        finPlansJTbl.setGridColor(new java.awt.Color(255, 255, 255));
        finPlansJTbl.setSelectionBackground(new java.awt.Color(0, 51, 102));
        jScrollPane2.setViewportView(finPlansJTbl);

        btnReport.setBackground(new java.awt.Color(0, 51, 102));
        btnReport.setFont(new java.awt.Font("Century Gothic", 0, 18)); // NOI18N
        btnReport.setForeground(new java.awt.Color(255, 255, 255));
        btnReport.setText("Generate Report");
        btnReport.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnReport.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnReportActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(120, 120, 120)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(planSendBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnReport, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(addPlanBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(400, 400, 400)
                        .addComponent(remPlanBtn1, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 460, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPane1)
                    .addComponent(jScrollPane2))
                .addContainerGap(80, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(100, 100, 100)
                .addComponent(jLabel1)
                .addGap(30, 30, 30)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(30, 30, 30)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(addPlanBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(remPlanBtn1, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(40, 40, 40)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(30, 30, 30)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(planSendBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnReport, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(79, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void remPlanBtn1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_remPlanBtn1ActionPerformed
        // TODO add your handling code here:
        int selectedRow = custPlansJTbl.getSelectedRow();
        if(selectedRow<0)
        {
            JOptionPane.showMessageDialog(null, "please select row");
            return;
        }
        InvestmentPlan iPlan = (InvestmentPlan)custPlansJTbl.getValueAt(selectedRow, 0);
        DefaultTableModel model1 = (DefaultTableModel) custPlansJTbl.getModel();
        DefaultTableModel model = (DefaultTableModel) finPlansJTbl.getModel();
        //        if(finPlansJTbl.getRowCount()==0){
            //model.setRowCount(0);
            Object[] row = new Object[6];
            row[0] = iPlan;
            row[1] = iPlan.getPlanCategory();
            row[2] = iPlan.getRiskType();
            row[3] = iPlan.getPlanAmt();
            row[4] = iPlan.getPlanInterestRate();
            row[5] = iPlan.getPlanPeriod();
            model.addRow(row);
            model1.removeRow(selectedRow);
            //        }
        //        else{
            //            Object[] row = new Object[6];
            //            row[0] = selectedPlan;
            //            row[1] = selectedPlan.getPlanType();
            //            row[2] = selectedPlan.getPlanFrequency();
            //            row[3] = selectedPlan.getPlanRoi();
            //            row[4] = selectedPlan.getPlanTime();
            //            row[5] = selectedPlan.getPlanEMI();
            //            model.addRow(row);
            //            model1.removeRow(selectedRow);
            //            populateAllPlanJTable();
            //        }
        //        else{
            //            boolean alreadyPresent =false;
            //            for(int i=0;i<custPlansJTbl.getRowCount();i++){
                //                if(custPlansJTbl.getValueAt(i, 0).equals(selectedPlan)){
                    //                     alreadyPresent=true;
                    //                     break;
                    //
                    //                }
                //
                //
                //            }
            //             if(!alreadyPresent){
                //                 Object[] row = new Object[6];
                //                        row[0] = selectedPlan;
                //                        row[1] = selectedPlan.getPlanType();
                //                        row[2] = selectedPlan.getPlanFrequency();
                //                        row[3]=selectedPlan.getPlanRoi();
                //                        row[4]=selectedPlan.getPlanTime();
                //                        row[5]=selectedPlan.getPlanEMI();
                //                        model.addRow(row);
                //
                //             }
            //
            //             else{
                //                    JOptionPane.showMessageDialog(null, "Please add a different plan or send to customer for further process", "ERROR", JOptionPane.ERROR_MESSAGE);
                //             }
            //
            //

    }//GEN-LAST:event_remPlanBtn1ActionPerformed

    private void planSendBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_planSendBtnActionPerformed
        // TODO add your handling code here:
        
         JOptionPane.showMessageDialog(null,"Investments have been processed", "INFORMATION", JOptionPane.INFORMATION_MESSAGE);


//        int c=0;
//        FinancialAdvisorWorkRequest request= new FinancialAdvisorWorkRequest();
//        for(int i=0;i<custPlansJTbl.getRowCount();i++){
//            FinancialPlan plan= (FinancialPlan)custPlansJTbl.getValueAt(i, 0);
//            request.setFinancialPlan(plan);
//            request.setCustName(name);
//            Organization org = null;
//            for (Organization organization : enterprise.getOrganizationDirectory().getOrganizationList()){
//                if (organization instanceof CustomerOrganization){
//                    org = organization;
//                    break;
//                }
//            }
//            if (org!=null){
//                org.getWorkQueue().getWorkRequestList().add(request);
//                c++;
//            }
//
//        }
//        if(c!=0){
//            JOptionPane.showMessageDialog(null, "Request Sent Successfully");
//            populateAllPlanJTable();
//            DefaultTableModel model = (DefaultTableModel) custPlansJTbl.getModel();
//            while(model.getRowCount()>0){
//                model.removeRow(0);
//            }
//            serveComplete();
//        }
//        else{
//
//        }

    }//GEN-LAST:event_planSendBtnActionPerformed

    private void addPlanBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addPlanBtnActionPerformed
        // TODO add your handling code here:
        int selectedRow = finPlansJTbl.getSelectedRow();
        if(selectedRow<0)
        {
            JOptionPane.showMessageDialog(null, "please select row");
            return;
        }
         InvestmentPlan iPlan = (InvestmentPlan)finPlansJTbl.getValueAt(selectedRow, 0);
        DefaultTableModel model1 = (DefaultTableModel) finPlansJTbl.getModel();
        DefaultTableModel model = (DefaultTableModel) custPlansJTbl.getModel();
        //if(custPlansJTbl.getRowCount()==0){
            //model.setRowCount(0);
             Object[] row = new Object[6];
            row[0] = iPlan;
            row[1] = iPlan.getPlanCategory();
            row[2] = iPlan.getRiskType();
            row[3] = iPlan.getPlanAmt();
            row[4] = iPlan.getPlanInterestRate();
            row[5] = iPlan.getPlanPeriod();
            model.addRow(row);
            model1.removeRow(selectedRow);
            
    }//GEN-LAST:event_addPlanBtnActionPerformed

    private void btnReportActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnReportActionPerformed
        // TODO add your handling code here:
        String new_Line_Separator = "\n";
        String comma = ",";
        FileWriter fileWriter = null;
       String filePath="C:\\Users\\Akshay Gavandi\\Desktop\\InvestmentReport.csv";
       try {
           fileWriter = new FileWriter(filePath,true);
           //fileWriter.append(file_Header.toString());
       } catch (IOException ex) {
           Logger.getLogger(ViewInvestmentPlans.class.getName()).log(Level.SEVERE, null, ex);
       }
       
       for(int i=0;i<custPlansJTbl.getRowCount();i++){
            try{
                  String planName = custPlansJTbl.getValueAt(i, 0).toString();
                  String planType = custPlansJTbl.getValueAt(i, 1).toString();
                  String planRisk = custPlansJTbl.getValueAt(i, 2).toString();
                  String planRoi = custPlansJTbl.getValueAt(i, 5).toString();
                  String planTime = custPlansJTbl.getValueAt(i, 4).toString();
                  String planEMI = custPlansJTbl.getValueAt(i, 3).toString();
                  fileWriter.append(new_Line_Separator);
                  fileWriter.append(planName);
                  fileWriter.append(comma);
                  fileWriter.append(planType);
                  fileWriter.append(comma);
                  fileWriter.append(planRisk);
                  fileWriter.append(comma);
                  fileWriter.append(planEMI);
                  fileWriter.append(comma);
                  fileWriter.append(planRoi);
                  fileWriter.append(comma);
                  fileWriter.append(planTime);
                  fileWriter.append(comma);
            }
            catch(Exception e){
                System.out.println("Error in CsvFileWriter !!!");
         
            }
           
           
       }
       try {
           fileWriter.close();
       } catch (IOException ex) {
           Logger.getLogger(ViewInvestmentPlans.class.getName()).log(Level.SEVERE, null, ex);
       }
       
       DefaultTableModel model = (DefaultTableModel) custPlansJTbl.getModel();
       model.setRowCount(0);
       populateFinPlansJTable();
    }//GEN-LAST:event_btnReportActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addPlanBtn;
    private javax.swing.JButton btnReport;
    private javax.swing.JTable custPlansJTbl;
    private javax.swing.JTable finPlansJTbl;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JButton planSendBtn;
    private javax.swing.JButton remPlanBtn1;
    // End of variables declaration//GEN-END:variables

   
    private void populateFinPlansJTable() {
        DefaultTableModel model = (DefaultTableModel) finPlansJTbl.getModel();

        model.setRowCount(0);
            for (InvestmentPlan iPlan : business.getInvPlanDirectory().getInvestmentPlanDir()) {
            Object[] row = new Object[6];
            row[0] = iPlan;
            row[1] = iPlan.getPlanCategory();
            row[2] = iPlan.getRiskType();
            row[3] = iPlan.getPlanAmt();
            row[4] = iPlan.getPlanInterestRate();
            row[5] = iPlan.getPlanPeriod();
            model.addRow(row);
        }
    }
}
