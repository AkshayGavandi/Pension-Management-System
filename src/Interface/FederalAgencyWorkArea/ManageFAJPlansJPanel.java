/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Interface.FederalAgencyWorkArea;

import Business.EcoSystem;
import Business.Enterprise.Enterprise;
import Business.FinancialAdvisorAndPlans.FinancialPlan;
import Business.Organization.CustomerOrganization;
import Business.Organization.FinancialAdvisorOrganization;
import Business.Organization.Organization;
import Business.WorkQueue.FAWorkRequest;
import Business.WorkQueue.FinancialAdvisorWorkRequest;
import Business.WorkQueue.WorkQueue;
import Business.WorkQueue.WorkRequest;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Akshay Gavandi
 */
public class ManageFAJPlansJPanel extends javax.swing.JPanel {

    /**
     * Creates new form ManageFAJPlansJPanel
     */
     private JPanel userProcessContainer;
     private Organization org;
     private EcoSystem business;
     private Enterprise enterprise;
    
    public ManageFAJPlansJPanel(JPanel userProcessContainer,Organization organization,EcoSystem system, Enterprise enterprise) {
        initComponents();
        this.userProcessContainer = userProcessContainer;
        this.org = organization;
        this.business = system;
        this.enterprise = enterprise;
        populatePlanTable();
    }

    private void populatePlanTable() {
//        DefaultTableModel model = (DefaultTableModel) finPlanJTable.getModel();
//
//        model.setRowCount(0);
//        
//        for (WorkRequest request: org.getWorkQueue().getWorkRequestList()) {
//            Object[] row = new Object[6];
//            row[0] = ((FAWorkRequest)request).getPlanName();
//            row[1] = ((FAWorkRequest)request).getPlanType();
//            row[2] = ((FAWorkRequest)request).getFrequency();
//            row[3] = ((FAWorkRequest)request).getAmount();
//            
//            model.addRow(row);
//        }

        DefaultTableModel model = (DefaultTableModel) finPlanJTable.getModel();

        model.setRowCount(0);
        for (FinancialPlan fedPlan : business.getPlanDirectory().getPlanList()) {
            if(fedPlan.getPlanType().equals("Dependents")){
                Object[] row = new Object[4];
                row[0] = fedPlan;
                row[1] = fedPlan.getPlanType();
                row[2] = fedPlan.getPlanFrequency();
                row[3] = fedPlan.getPlanEMI();
                model.addRow(row);
            }
        }
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        planViewBtn = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        deletePlanBtn = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        nameJTextField = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        submitJButton = new javax.swing.JButton();
        emiTxtField = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        cbType = new javax.swing.JComboBox<>();
        cbFrequency = new javax.swing.JComboBox<>();
        jScrollPane1 = new javax.swing.JScrollPane();
        finPlanJTable = new javax.swing.JTable();

        setBackground(new java.awt.Color(255, 255, 255));

        planViewBtn.setBackground(new java.awt.Color(0, 51, 102));
        planViewBtn.setFont(new java.awt.Font("Century Gothic", 0, 18)); // NOI18N
        planViewBtn.setForeground(new java.awt.Color(255, 255, 255));
        planViewBtn.setText("View");
        planViewBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                planViewBtnActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Century Gothic", 1, 24)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel1.setText("Manage Plans");

        deletePlanBtn.setBackground(new java.awt.Color(0, 51, 102));
        deletePlanBtn.setFont(new java.awt.Font("Century Gothic", 0, 18)); // NOI18N
        deletePlanBtn.setForeground(new java.awt.Color(255, 255, 255));
        deletePlanBtn.setText("Delete");
        deletePlanBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deletePlanBtnActionPerformed(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Century Gothic", 0, 18)); // NOI18N
        jLabel2.setText("Name");

        nameJTextField.setFont(new java.awt.Font("Century Gothic", 0, 18)); // NOI18N
        nameJTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nameJTextFieldActionPerformed(evt);
            }
        });

        jLabel7.setFont(new java.awt.Font("Century Gothic", 0, 18)); // NOI18N
        jLabel7.setText("Amount:");

        submitJButton.setBackground(new java.awt.Color(0, 51, 102));
        submitJButton.setFont(new java.awt.Font("Century Gothic", 0, 18)); // NOI18N
        submitJButton.setForeground(new java.awt.Color(255, 255, 255));
        submitJButton.setText("Submit");
        submitJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                submitJButtonActionPerformed(evt);
            }
        });

        emiTxtField.setFont(new java.awt.Font("Century Gothic", 0, 18)); // NOI18N
        emiTxtField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                emiTxtFieldActionPerformed(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Century Gothic", 0, 18)); // NOI18N
        jLabel3.setText("Type:");

        jLabel4.setFont(new java.awt.Font("Century Gothic", 0, 18)); // NOI18N
        jLabel4.setText("Frequency:");

        cbType.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Dependents" }));
        cbType.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbTypeActionPerformed(evt);
            }
        });

        cbFrequency.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Monthly" }));
        cbFrequency.setEnabled(false);

        finPlanJTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Plan Name", "Plan Type", "Plan Frequency", "Amount"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        finPlanJTable.setGridColor(new java.awt.Color(255, 255, 255));
        finPlanJTable.setSelectionBackground(new java.awt.Color(0, 51, 102));
        jScrollPane1.setViewportView(finPlanJTable);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(120, 120, 120)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 800, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 196, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(submitJButton, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 0, 0)
                        .addComponent(planViewBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(1, 1, 1)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(deletePlanBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(cbType, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(nameJTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(emiTxtField, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(cbFrequency, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(0, 0, 0))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(100, 100, 100)
                .addComponent(jLabel1)
                .addGap(30, 30, 30)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(30, 30, 30)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(emiTxtField, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(nameJTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(30, 30, 30)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(cbType, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(31, 31, 31)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(cbFrequency, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(60, 60, 60)))
                .addGap(30, 30, 30)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(submitJButton, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(planViewBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(deletePlanBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(62, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void planViewBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_planViewBtnActionPerformed
        // TODO add your handling code here:
        int selectedRow = finPlanJTable.getSelectedRow();
        if (selectedRow < 0) {
            JOptionPane.showMessageDialog(null, "Please select a row from the table first to view detail", "Warning", JOptionPane.WARNING_MESSAGE);

        }else{
            FinancialPlan fPlan = (FinancialPlan) finPlanJTable.getValueAt(selectedRow, 0);
            nameJTextField.setText(fPlan.getPlanName());
            //typeJTextField.setText(fPlan.getPlanType());
            //freqJTextField.setText(fPlan.getPlanFrequency());
            emiTxtField.setText(String.valueOf(fPlan.getPlanEMI()));
            nameJTextField.setEnabled(false);
            //freqJTextField.setEnabled(false);
            emiTxtField.setEnabled(false);
        }
    }//GEN-LAST:event_planViewBtnActionPerformed

    private void deletePlanBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deletePlanBtnActionPerformed
        // TODO add your handling code here:

        int selectedRow = finPlanJTable.getSelectedRow();
        if (selectedRow < 0) {
            JOptionPane.showMessageDialog(null, "Please select a row from the table first to view detail", "Warning", JOptionPane.WARNING_MESSAGE);

        }else{
            FinancialPlan fPlan = (FinancialPlan) finPlanJTable.getValueAt(selectedRow, 0);
            business.getPlanDirectory().removePlan(fPlan);
            populatePlanTable();
        }
    }//GEN-LAST:event_deletePlanBtnActionPerformed

    private void nameJTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nameJTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_nameJTextFieldActionPerformed

    private void submitJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_submitJButtonActionPerformed
        int error=0;
        double rate = 0;
        int period = 0;
        String name = nameJTextField.getText();
        String type= cbType.getSelectedItem().toString();
        String frequency="Monthly";
        Double emi=0.0;
        try{
            emi=Double.parseDouble(emiTxtField.getText());
        }
        catch(NumberFormatException e){
            JOptionPane.showMessageDialog(null, "Please enter amount");
            error++;
            
        }
        if(error==0){
            if (nameJTextField.getText().trim().equalsIgnoreCase("")) {
                JOptionPane.showMessageDialog(null, "Please enter valid name");
            }
            else{
                FinancialPlan fPlan = business.getPlanDirectory().addPlan(name, type, frequency,rate,period,emi);
                //FinancialPlan fedPlan = business.getPlanDirectory().addPlan(name, type, frequency,rate,period,emi); 
//                FAWorkRequest fAWorkRequest = new FAWorkRequest();
//                fAWorkRequest.setPlanName(name);
//                fAWorkRequest.setPlanType(type);
//                fAWorkRequest.setFrequency(frequency);
//                fAWorkRequest.setAmount(String.valueOf(emi));
//                for (Organization organization : enterprise.getOrganizationDirectory().getOrganizationList()){
//                    if (organization instanceof FinancialAdvisorOrganization){
//                        org = organization;
//                        org.getWorkQueue().getWorkRequestList().add(fAWorkRequest);
//                        break;
//                    }
//                }
//                org.getWorkQueue().getWorkRequestList().add(fAWorkRequest);
                populatePlanTable();
            }

            int c=0;
            
////            for(int i=0;i<finPlanJTable.getRowCount();i++){
////                FAWorkRequest request = new FAWorkRequest();
////                FinancialPlan plan= (FinancialPlan)finPlanJTable.getValueAt(i, 0);
////                request.setFinancialPlan(plan);
////                //request.setCustName(name);
////                Organization org = null;
////                for (Organization organization : enterprise.getOrganizationDirectory().getOrganizationList()){
////                    if (organization instanceof FinancialAdvisorOrganization){
////                        org = organization;
////                        break;
////                    }
////                }
////                if (org!=null){
////                        org.getWorkQueue().getWorkRequestList().add(request);
////                        c++;
////                }
////            }
//            if(c!=0){
//                JOptionPane.showMessageDialog(null, "Plans updated and synced with Insurance Enterprise");
                //populateAllPlanJTable();
    //            DefaultTableModel model = (DefaultTableModel) custPlansJTbl.getModel();
    //            while(model.getRowCount()>0){
    //                model.removeRow(0);
    //            }
                //serveComplete();
//            }
//            else{
//
//            }
        }
    }//GEN-LAST:event_submitJButtonActionPerformed

    private void emiTxtFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_emiTxtFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_emiTxtFieldActionPerformed

    private void cbTypeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbTypeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cbTypeActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> cbFrequency;
    private javax.swing.JComboBox<String> cbType;
    private javax.swing.JButton deletePlanBtn;
    private javax.swing.JTextField emiTxtField;
    private javax.swing.JTable finPlanJTable;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField nameJTextField;
    private javax.swing.JButton planViewBtn;
    private javax.swing.JButton submitJButton;
    // End of variables declaration//GEN-END:variables
}
